{"name":"Ruby-getresponse","body":"# GetResponse\r\n\r\nWrapper for GetResponse API.\r\nClass interfaces from version 0.2 has changed breaking backward compatibility.\r\nBe sure to check changes before update.\r\n\r\n##  Usage\r\n\r\nJust add to you Gemfile\r\n\r\n  `gem \"getresponse\", :require => \"get_response\"`\r\n\r\nTest connection to GetResponse API.\r\n\r\n  `gr_connection = GetResponse::Connection.new(\"my_secret_api\")\r\n   gr_connection.ping`\r\n\r\nGet info about account:\r\n\r\n  `gr_connection.account`\r\n\r\nGet your active campaigns.\r\n\r\n  `gr_connection.campaigns.all`\r\n\r\nYou can operate on your contacts quite the same way as on ActiveRecord objects. Before any operation\r\non contacts you must connect to API.\r\n\r\nGet all contacts:\r\n\r\n  `gr_connection.contacts.all`\r\n\r\nCreate new contact:\r\n\r\n  `# with connection\r\n   gr_connection.contacts.create(\"name\" => \"John Doe\", \"email\" => \"john.d@somewhere.com\",\r\n     \"campaign\" => \"campaignId\", \"customs\" => { \"source\" => \"mainpage\" })`\r\n\r\nUpdate your contact:\r\n\r\n  `# with connection\r\n   # contact - existing contact\r\n   contact.update(\"name\" => \"John Thenewname\")\r\n\r\n   # or\r\n   contact.name = \"John Thenewname\"\r\n   contact.save`\r\n\r\nDelete contact:\r\n\r\n  `# with connection\r\n   # contact - existing contact\r\n   contact.destroy`\r\n\r\nMove contact between campaigns:\r\n\r\n  `# with connection\r\n   # contact - existing contact\r\n   # zXy - existing campaign\r\n   contact.move(\"zXy\")`\r\n\r\n\r\nGet geoip location\r\n\r\n  `# with connection\r\n   # contact - existing contact\r\n   contact.geoip`\r\n\r\nSet contact cycle\r\n\r\n  `# with connection\r\n   # contact - existing contact\r\n   contact.set_cycle(5)`\r\n\r\nGet custom attributes\r\n\r\n  `# with connection\r\n   # contact - existing contact\r\n   contact.customs\r\n   => { \"attr_name\" => \"attr_value\" }`\r\n\r\nGet account from fields\r\n\r\n  `# with account\r\n   # account - existing account\r\n   account.from_fields.all\r\n   => [<FromField: xcv>]`\r\n\r\nAdd account from field\r\n\r\n  `# with account\r\n   # account = existing account\r\n   account.from_fields.create(\"name\" => \"My new name\", \"email\" => \"my_new_email@foo.bar\")\r\n   => #<GetResponse::FromField:0xb7727010 ... >`\r\n\r\nGet account domains\r\n\r\n  `# with account\r\n   # account - existing account\r\n   account.domains.all`\r\n\r\nGet campaign domain\r\n\r\n  `# with campaign\r\n   # campaign - existing campaign\r\n   campaign.domain`\r\n\r\nSet campaign domain\r\n\r\n  `domain = account.domains.first\r\n  campaign.domain = domain`\r\n\r\nGet campaign messages\r\n\r\n  `# with campaign\r\n   # campaign - existing campaign\r\n   messages = campaign.messages\r\n   newsletters = campaign.messages(:type => \"newsletter\")`\r\n\r\nGet all messages\r\n\r\n  `# with connection\r\n   connection.messages.all`\r\n\r\nGet message contents\r\n\r\n  `# with message\r\n   # message - existing messsage\r\n   message.contents[\"plain\"]\r\n   message.contents[\"html\"]`\r\n\r\nGet stats of message\r\n\r\n  `# message - existing message\r\n   message.stats`\r\n\r\nDelete message\r\n\r\n  `# message - existing message\r\n   message.destroy`\r\n\r\nGet/set campaign's postal address\r\n\r\n  `# campaign_one - existing campaign\r\n   # campaign_two - existing campaign\r\n   postal_address = campaign_one.postal_address\r\n   campaign_two.postal_address = postal_address`\r\n\r\n\r\nTo get contact openned message list with dates\r\n\r\n  `# contact - existing contact\r\n   @contact.opens`\r\n\r\nGet subscriptions statistics\r\n\r\n  `# campaign - existing campaign\r\n   campaign.subscription_statistics\r\n   campaign.subscription_statistics(:created_on => {:at => Date.today})\r\n   campaign.subscription_statistics(:created_on => {:from => \"2011-01-01\", :to => \"2011-12-30\"})`\r\n\r\nGet confirmation message bodies\r\n\r\n  `# connection - existing connection\r\n   connection.confirmation_bodies.all\r\n   connection.confirmation_bodies.all(:language_code => {:equals => \"en\"})`\r\n\r\nGet confirmation message subjects\r\n\r\n  `# connection - existing connection\r\n   connection.confirmation_subjects.all\r\n   connection.confirmation_subjects.all(:language_code => {:equals => \"en\"})`\r\n\r\nGet deleted contacts\r\n\r\n  `contact_proxy.deleted\r\n   contact_proxy.deleted(:reason => \"bounce\")\r\n   campaign.deleted`\r\n\r\nGet single field form by id\r\n\r\n  `from_field_proxy.find(\"from_field_id\")`\r\n\r\nGet single confirmation body by id\r\n\r\n  `confirmation_body_proxy.find(\"confirmation_body_id\")`\r\n\r\nGet single confirmation subject by id\r\n\r\n  `confirmation_subject_proxy.find(\"confirmation_subject_id\")`\r\n\r\nCreate new campaign\r\n\r\n  `connection.campaigns.create(new_campaign_attributes)`\r\n\r\nFetching links embedded in messages\r\n\r\n  `connection.links.all\r\n   message.links`\r\n\r\nFetching blacklisted addresses for account\r\n\r\n  `account.blacklist`\r\n\r\nFetching blacklisted addresses for campaign\r\n\r\n  `campaign.blacklist`\r\n","tagline":"Wrapper for GetResponse JSON-RPC service","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}